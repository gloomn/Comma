<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHgAAAB4CAYAAAA5ZDbSAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAQLSURBVHhe7dzPilVXEMXhhkY6DxEhJE58mICgASF5mIyCM2nIC2QgONDHEQz5I0kGmWWQBDKz
        XfucX0vSmvZ0W1XXXWd9sEG776lVVZvbfQfikZmZmZmZmZmZmZmZmZlZkLOzsxOdr3Se6vyk84eOvd3Y
        zdjRE50vdU5Y44dJDd7TeaFj1/Ozzl3W+eFQU8c6p6NDC/FQ55j1Hp6a+XZpyyKdst7DUiN31n4s2Eud
        z1nzYaiBj3T8OzfP+J18uA9eCr+/tGGZvmDd9RT+eO3BEj1i3fUU/sPagyV6zrrrKfyvtQdL9CfrrkcD
        lox11yPfkrHueuRbMtZdj3xLxrrrkW/JWHc98i0Z665HviVj3fXIt2Ssux75lox11yPfkrHueuSHoez0
        GCcMZeuRH4ay02OcMJStR34Yyk6PccJQth75YSg7PcYJQ9l65Ieh7PQYJwxl65EfhrLTY5wwlK1HfhjK
        To9xwlC2HvlhKDs9xglD2Xrkh6Hs9BgnDGXrkR+GstNjnDCUrUe+JWPd9ci3ZKy7HvmWjHXXI9+Sse56
        5Fsy1l2PfEvGuuuRb8lYdz3yLRnrrke+JWPd9ci3ZKy7HvlhKJuKqKnQej3yw1A2FVFTofV65IehbCqi
        pkLr9cgPQ9lURE2F1uuRH4ayqYiaCq3XIz8MZVMRNRVar0d+GMqmImoqtF6P/DCUTUXUVGi9HvlhKJuK
        qKnQej3yw1A2FVFTofV65Fsy1l2PfEvGuuuRb8lYdz3yLRnrrke+JWPd9chviRHTKepjnUv/W2ZeWo/8
        lhgxlWI+1fllCbwEL69HfkuMmEYRmy534JF65LfEiClU/jOdTZc78Fg98ltixHAqPS731yVkIx6tR35L
        jBhKZW/q/LgEbPeAx+vRQEuMGEYlr/zOla95/DBooiVGDKFy813uQCMtMeJ7U6k5L3egmZYY8b2ozLyX
        O9BQS4x4bSox9+UONNUSI16LHp//cgcaa4kRr0yP9rjcgeZaYsQr0WN9LnegwZYYcTM90utyB5psiRE3
        0cv7Xe5Aoy0x4jvppbd0+l3uQLMtMeKl9LJxub8tD2w3x+UONNwSI/4vvaT35Q403RIjvpW+3f9yBxpv
        iRHfoG/t43IHmm+JEf9DX97P5Q4M0BIjvqYv7etyB4ZoiREX+uv+LndgkJYYcb+XO2iQv9d5+mG+T3Re
        LF/Y7nD/hiqahvl+naml2zq/r3/crMc795wGerzO1dJ+37nnNNT9dbbd63e5gwa7odP5x/QWvX4sX6QB
        76xz7lLPd+5FGvSbdd5d6f3O/TcNe6xzuoy9D/t4516kwe/pXPXT52z2ebnntIATnfHp+judZzr/6HSx
        78s1MzMzMzMzMzMzMzMzs3kcHb0CfB1HmkP9q8UAAAAASUVORK5CYII=
</value>
  </data>
</root>